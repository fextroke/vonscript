--  Prevent re-executing itself
if getgenv().VON_SCRIPT_LOADED then return end
getgenv().VON_SCRIPT_LOADED = true

--  Optional: Destroy duplicate Rayfield UI if it exists
pcall(function()
   game.CoreGui:FindFirstChild("Rayfield"):Destroy()
end)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "VON'S SCRIPT",
   Icon = 0,
   LoadingTitle = "Made by VON",
   LoadingSubtitle = "by VON",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "VON NGA"
   },
   Discord = {
      Enabled = true,
      Invite = "/j4zxsUtS",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "VON MAIN",
      Subtitle = "LINK IN DISCORD",
      Note = "THIS SCRIPT IS WITH TAONG GOMA",
      FileName = "Check Discord For Key",
      SaveKey = false,
      GrabKeyFromSite = true,
      Key = {"vonontop"} or {taongomaontop}
   }
})

local MainTab = Window:CreateTab("MAIN SCRIPT", nil)
MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "VON NGA",
   Content = "Thankyou For Using VON Script",
   Duration = 8,
})

local function addButton(name, url)
   MainTab:CreateButton({
      Name = name,
      Callback = function()
         loadstring(game:HttpGet(url, true))()
      end,
   })
end

-- ðŸ”— Online Scripts
addButton("INFINITE YIELD (VON)", "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source")
addButton("MUSIC EXPO (VON)", "https://pastebin.com/raw/i0BvGEMG")
addButton("FADED (VON)", "https://raw.githubusercontent.com/NighterEpic/Faded-Grid/main/YesEpic")
addButton("TROLL (VON)", "https://raw.githubusercontent.com/TheqopThe/robax/refs/heads/main/jumpscare.lua")
addButton("HITBOX EXTENDER (VON)", "https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/HitboxExpander.lua")
addButton("ESP (VON)", "https://raw.githubusercontent.com/Lucasfin000/SpaceHub/main/UESP")
addButton("ALADIA AIMBOT (VON)", "https://raw.githubusercontent.com/VonScriptHub/TAONG-GOMA/main/aladia_aimbot.lua")

-- âœ… Inline BIGHEAD (working)
local Button = MainTab:CreateButton({
   Name = "BIG HEAD [GOMA]",
   Callback = function()
   _G.HeadSize = 4 _G.Disabled = true game:GetService('RunService').RenderStepped:connect(function() if _G.Disabled then for i,v in next, game:GetService('Players'):GetPlayers() do if v.Name ~= game:GetService('Players').LocalPlayer.Name then pcall(function() v.Character.Head.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize) v.Character.Head.Transparency = 0.4 v.Character.Head.BrickColor = BrickColor.new("Red") v.Character.Head.Material = "Neon" v.Character.Head.CanCollide = false v.Character.Head.Massless = true end) end end end end)
   end,
})
-- âœ… Inline LOOPBRING (working)
MainTab:CreateButton({
   Name = "LOOPBRING (VON)",
   Callback = function()
      if getgenv().LoopBringConn then
         getgenv().LoopBringConn:Disconnect()
         getgenv().LoopBringConn = nil
         Rayfield:Notify({Title="LOOPBRING",Content="Stopped",Duration=3})
         return
      end

      local targetName = selectedPlayer
      if not targetName or targetName == "" then
         Rayfield:Notify({Title="ERROR",Content="Set Target Username above",Duration=3})
         return
      end

      getgenv().LoopBringConn = game:GetService("RunService").RenderStepped:Connect(function()
         local p = game.Players:FindFirstChild(targetName)
         local lp = game.Players.LocalPlayer
         if p and p.Character and lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
            p.Character:SetPrimaryPartCFrame(lp.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 0))
         end
      end)
      Rayfield:Notify({Title="LOOPBRING",Content="Bringing " .. targetName,Duration=3})
   end,
})

-- âœ… Inline FLING ALL (working)
MainTab:CreateButton({
   Name = "FLING ALL (VON)",
   Callback = function()
      for _, p in pairs(game.Players:GetPlayers()) do
         if p ~= game.Players.LocalPlayer and p.Character then
            local hrp = p.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
               hrp.AssemblyLinearVelocity = Vector3.new(0, 500, 0)
            end
         end
      end
      Rayfield:Notify({Title="FLING ALL",Content="All players flung",Duration=3})
   end,
})

-- ðŸ”« SPAWN GUN TAB
local STab = Window:CreateTab("SPAWN GUN", nil)
STab:CreateSection("SPAWN GUN")

local function gunButton(name, item)
   STab:CreateButton({
      Name = name,
      Callback = function()
         game:GetService("ReplicatedStorage").GunShop.Events.Purchase:FireServer(item, -10000)
      end,
   })
end

gunButton("ALL CITY SP (VON)", "Silenced Pistol")
gunButton("ALL CITY Glock-17 (VON)", "Glock-17")
gunButton("ALL CITY Glock-19 (VON)", "Glock-19")
gunButton("ALL CITY Desert Deagle (VON)", "Desert Deagle")

-- ðŸ‘¥ BRING TAB
local BringTab = Window:CreateTab("BRING", nil)
BringTab:CreateSection("Bring Controls")

local savedPositions = {}
selectedPlayer = ""

BringTab:CreateInput({
   Name = "Target Username",
   PlaceholderText = "Enter Player Name",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
      selectedPlayer = Text
   end,
})

BringTab:CreateButton({
   Name = "Bring User (with Freeze)",
   Callback = function()
      local player = game.Players:FindFirstChild(selectedPlayer)
      local localPlayer = game.Players.LocalPlayer
      if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
         savedPositions[player.Name] = player.Character.HumanoidRootPart.CFrame
         player.Character.HumanoidRootPart.CFrame = localPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(3, 0, 0)
         local humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
         if humanoid then
            humanoid.WalkSpeed = 0
            humanoid.JumpPower = 0
         end
         Rayfield:Notify({
            Title = "BRING & FREEZE",
            Content = "Player " .. player.Name .. " was brought and frozen.",
            Duration = 5
         })
      else
         Rayfield:Notify({
            Title = "ERROR",
            Content = "Player not found or invalid.",
            Duration = 5
         })
      end
   end,
})

BringTab:CreateButton({
   Name = "Unbring User",
   Callback = function()
      local player = game.Players:FindFirstChild(selectedPlayer)
      if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and savedPositions[player.Name] then
         player.Character.HumanoidRootPart.CFrame = savedPositions[player.Name]
         local humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
         if humanoid then
            humanoid.WalkSpeed = 16
            humanoid.JumpPower = 50
         end
         Rayfield:Notify({
            Title = "UNBRING & UNFREEZE",
            Content = "Player " .. player.Name .. " was returned and unfrozen.",
            Duration = 5
         })
      else
         Rayfield:Notify({
            Title = "ERROR",
            Content = "No saved position or player not found.",
            Duration = 5
         })
      end
   end,
})

-- Aimbot Tab
MainTab:CreateButton({
   Name = "AIMBOT (VON)",
   Callback = function()

      if getgenv().Aimbot then
         getgenv().Aimbot.Functions:Exit()
      end

      -- START OF CUSTOM AIMBOT SCRIPT
      local select = select
      local pcall, getgenv, next, Vector2, mathclamp, type, mousemoverel = select(1, pcall, getgenv, next, Vector2.new, math.clamp, type, mousemoverel or (Input and Input.MouseMove))

      getgenv().Aimbot = {}
      local Environment = getgenv().Aimbot

      local RunService = game:GetService("RunService")
      local UserInputService = game:GetService("UserInputService")
      local TweenService = game:GetService("TweenService")
      local Players = game:GetService("Players")
      local Camera = workspace.CurrentCamera
      local LocalPlayer = Players.LocalPlayer

      local RequiredDistance, Typing, Running, Animation, ServiceConnections = 2000, false, false, nil, {}

      Environment.Settings = {
         Enabled = true,
         TeamCheck = false,
         AliveCheck = true,
         WallCheck = false,
         Sensitivity = 0,
         ThirdPerson = false,
         ThirdPersonSensitivity = 3,
         TriggerKey = "MouseButton2",
         Toggle = false,
         LockPart = "Head"
      }

      Environment.FOVSettings = {
         Enabled = true,
         Visible = true,
         Amount = 90,
         Color = Color3.fromRGB(255, 255, 255),
         LockedColor = Color3.fromRGB(255, 70, 70),
         Transparency = 0.5,
         Sides = 60,
         Thickness = 1,
         Filled = false
      }

      Environment.FOVCircle = Drawing.new("Circle")

      local function CancelLock()
         Environment.Locked = nil
         if Animation then Animation:Cancel() end
         Environment.FOVCircle.Color = Environment.FOVSettings.Color
      end

      local function GetClosestPlayer()
         if not Environment.Locked then
            RequiredDistance = (Environment.FOVSettings.Enabled and Environment.FOVSettings.Amount or 2000)
            for _, v in next, Players:GetPlayers() do
               if v ~= LocalPlayer then
                  if v.Character and v.Character:FindFirstChild(Environment.Settings.LockPart) and v.Character:FindFirstChildOfClass("Humanoid") then
                     if Environment.Settings.TeamCheck and v.Team == LocalPlayer.Team then continue end
                     if Environment.Settings.AliveCheck and v.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then continue end
                     if Environment.Settings.WallCheck and #(Camera:GetPartsObscuringTarget({v.Character[Environment.Settings.LockPart].Position}, v.Character:GetDescendants())) > 0 then continue end

                     local Vector, OnScreen = Camera:WorldToViewportPoint(v.Character[Environment.Settings.LockPart].Position)
                     local Distance = (Vector2(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2(Vector.X, Vector.Y)).Magnitude

                     if Distance < RequiredDistance and OnScreen then
                        RequiredDistance = Distance
                        Environment.Locked = v
                     end
                  end
               end
            end
         elseif (Vector2(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2(Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position).X, Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position).Y)).Magnitude > RequiredDistance then
            CancelLock()
         end
      end

      ServiceConnections.TypingStartedConnection = UserInputService.TextBoxFocused:Connect(function()
         Typing = true
      end)

      ServiceConnections.TypingEndedConnection = UserInputService.TextBoxFocusReleased:Connect(function()
         Typing = false
      end)

      local function Load()
         ServiceConnections.RenderSteppedConnection = RunService.RenderStepped:Connect(function()
            if Environment.FOVSettings.Enabled and Environment.Settings.Enabled then
               Environment.FOVCircle.Radius = Environment.FOVSettings.Amount
               Environment.FOVCircle.Thickness = Environment.FOVSettings.Thickness
               Environment.FOVCircle.Filled = Environment.FOVSettings.Filled
               Environment.FOVCircle.NumSides = Environment.FOVSettings.Sides
               Environment.FOVCircle.Color = Environment.FOVSettings.Color
               Environment.FOVCircle.Transparency = Environment.FOVSettings.Transparency
               Environment.FOVCircle.Visible = Environment.FOVSettings.Visible
               Environment.FOVCircle.Position = Vector2(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
            else
               Environment.FOVCircle.Visible = false
            end

            if Running and Environment.Settings.Enabled then
               GetClosestPlayer()
               if Environment.Locked then
                  if Environment.Settings.ThirdPerson then
                     Environment.Settings.ThirdPersonSensitivity = mathclamp(Environment.Settings.ThirdPersonSensitivity, 0.1, 5)
                     local Vector = Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position)
                     mousemoverel((Vector.X - UserInputService:GetMouseLocation().X) * Environment.Settings.ThirdPersonSensitivity, (Vector.Y - UserInputService:GetMouseLocation().Y) * Environment.Settings.ThirdPersonSensitivity)
                  else
                     if Environment.Settings.Sensitivity > 0 then
                        Animation = TweenService:Create(Camera, TweenInfo.new(Environment.Settings.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
                           CFrame = CFrame.new(Camera.CFrame.Position, Environment.Locked.Character[Environment.Settings.LockPart].Position)
                        })
                        Animation:Play()
                     else
                        Camera.CFrame = CFrame.new(Camera.CFrame.Position, Environment.Locked.Character[Environment.Settings.LockPart].Position)
                     end
                  end
                  Environment.FOVCircle.Color = Environment.FOVSettings.LockedColor
               end
            end
         end)

         ServiceConnections.InputBeganConnection = UserInputService.InputBegan:Connect(function(Input)
            if not Typing then
               pcall(function()
                  if Input.KeyCode == Enum.KeyCode[Environment.Settings.TriggerKey] then
                     if Environment.Settings.Toggle then
                        Running = not Running
                        if not Running then CancelLock() end
                     else
                        Running = true
                     end
                  end
               end)
               pcall(function()
                  if Input.UserInputType == Enum.UserInputType[Environment.Settings.TriggerKey] then
                     if Environment.Settings.Toggle then
                        Running = not Running
                        if not Running then CancelLock() end
                     else
                        Running = true
                     end
                  end
               end)
            end
         end)

         ServiceConnections.InputEndedConnection = UserInputService.InputEnded:Connect(function(Input)
            if not Typing and not Environment.Settings.Toggle then
               pcall(function()
                  if Input.KeyCode == Enum.KeyCode[Environment.Settings.TriggerKey] then
                     Running = false; CancelLock()
                  end
               end)
               pcall(function()
                  if Input.UserInputType == Enum.UserInputType[Environment.Settings.TriggerKey] then
                     Running = false; CancelLock()
                  end
               end)
            end
         end)
      end

      Environment.Functions = {}

      function Environment.Functions:Exit()
         for _, v in next, ServiceConnections do v:Disconnect() end
         if Environment.FOVCircle.Remove then Environment.FOVCircle:Remove() end
         getgenv().Aimbot = nil
         Load = nil; GetClosestPlayer = nil; CancelLock = nil
      end

      function Environment.Functions:Restart()
         for _, v in next, ServiceConnections do v:Disconnect() end
         Load()
      end

      function Environment.Functions:ResetSettings()
         Environment.Settings = {
            Enabled = true,
            TeamCheck = false,
            AliveCheck = true,
            WallCheck = false,
            Sensitivity = 0,
            ThirdPerson = false,
            ThirdPersonSensitivity = 3,
            TriggerKey = "MouseButton2",
            Toggle = false,
            LockPart = "Head"
         }

         Environment.FOVSettings = {
            Enabled = true,
            Visible = true,
            Amount = 90,
            Color = Color3.fromRGB(255, 255, 255),
            LockedColor = Color3.fromRGB(255, 70, 70),
            Transparency = 0.5,
            Sides = 60,
            Thickness = 1,
            Filled = false
         }
      end

      Load()
      -- END OF CUSTOM AIMBOT SCRIPT
   end
})
